load("@rules_cc//cc:defs.bzl", "cc_binary")
cc_binary(
    name = "main",
    srcs = ["main.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "variadic",
    srcs = ["variadic.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "variadic_no_helper",
    srcs = ["variadic_no_helper.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "numbers",
    srcs = ["numbers.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "static_assert",
    srcs = ["static_assert.cc"],
    deps = ["//src/lib:utility"],
)


cc_binary(
    name = "is_char",
    srcs = ["is_char.cc"],
    deps = ["//src/lib:utility"],
)


cc_binary(
    name = "is_unsigned",
    srcs = ["is_unsigned.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "is_same",
    srcs = ["is_same.cc"],
    deps = ["//src/lib:utility"],
)


cc_binary(
    name = "traits",
    srcs = ["traits.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "fibonacci",
    srcs = ["fibonacci.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "enable_if",
    srcs = ["enable_if.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "superprint",
    srcs = ["superprint.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "variadic_functions",
    srcs = ["variadic_functions.cc"],
    deps = ["//src/lib:utility"],
)

cc_binary(
    name = "variadic_functions_simple",
    srcs = ["variadic_functions_simple.cc"],
    deps = ["//src/lib:utility"],
)




cc_binary(
    name = "non_type",
    srcs = ["non_type.cc"],
    deps = ["//src/lib:utility"],
)



cc_binary(
name = "pimple_swap_template",
srcs = ["pimple_swap_template.cc"],
)


cc_binary(
name = "access_names",
srcs = ["access_names.cc"],
)

cc_binary(
name = "non_member_functions_inside_templates",
srcs = ["non_member_functions_inside_templates.cc"],
)

cc_binary(
name = "traits_effective_cpp",
srcs = ["traits_effective_cpp.cc"],
)

cc_binary(
name = "meta_programming",
srcs = ["meta_programming.cc"],
)

cc_binary(
name = "variadic_with_init_list",
srcs = ["variadic_with_init_list.cc"],
)

cc_binary(
name = "alias_template",
srcs = ["alias_template.cc"],
)

cc_binary(
name = "meta_programming_container",
srcs = ["meta_programming_container.cc"],
)